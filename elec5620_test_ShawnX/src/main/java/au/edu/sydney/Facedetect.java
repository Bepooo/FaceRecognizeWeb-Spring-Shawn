package au.edu.sydney;

import com.baidu.ai.aip.utils.HttpUtil;
import com.baidu.ai.aip.utils.Base64Util;
import com.baidu.ai.aip.utils.FileUtil;
import com.baidu.ai.aip.utils.GsonUtils;

import java.util.*;

/**
 * 人脸检测与属性分析
 */
public class Facedetect {

	/**
	 * 重要提示代码中所需工具类 FileUtil,Base64Util,HttpUtil,GsonUtils请从
	 * https://ai.baidu.com/file/658A35ABAB2D404FBF903F64D47C1F72
	 * https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2
	 * https://ai.baidu.com/file/544D677F5D4E4F17B4122FBD60DB82B3
	 * https://ai.baidu.com/file/470B3ACCA3FE43788B5A963BF0B625F3 下载
	 * 
	 * @return
	 */
	public static String detect(String n) {
		// 请求url
		String url = "https://aip.baidubce.com/rest/2.0/face/v3/detect";
		System.out.println("get into face detect");
		try {
			byte[] bytes1 = FileUtil.readFileByBytes(n);
			String image1 = Base64Util.encode(bytes1);
			Map<String, Object> map = new HashMap<>();
			// map.put("image","");
			map.put("face_field", "faceshape,facetype");
			map.put("image", image1);
			// map.put("image_type", "BASE64");
			map.put("image_type", "BASE64");

			String param = GsonUtils.toJson(map);

			// 注意这里仅为了简化编码每一次请求都去获取access_token，线上环境access_token有过期时间，
			// 客户端可自行缓存，过期后重新获取。
			// String accessToken =
			// "24.936901e94eee6271964498fe78f714e0.2592000.1538380298.282335-11758176";
			String accessToken = "24.ac1d816795c040131e0736934b5991f6.2592000.1541559242.282335-11758176";
			String result = HttpUtil.post(url, accessToken, "application/json", param);
			System.out.println(result);
			String[] seperate1 = result.split("face_token");
			String[] seperate2 = seperate1[1].split(":");
			String[] seperate3 = seperate2[1].split(",");
			String facetoken = seperate3[0].substring(1, seperate3[0].length() - 1);
			System.out.println(facetoken);
			return facetoken;
			// return result;
		} catch (Exception e) {
			e.printStackTrace();
		}

		return null;
	}

}